Процесс рассчета особенностей состоит из нескольких частей. Во-первых, заранее вычислены разметка - testLbl (80/20). Храниться в файле lbls.csv.
Заранее вычислены блоки из которых будет производиться выбор. 300 для DSIFT и 500 для HOG и GABOR. Блоки для DSIFT отличаются большим размером.

Для фильтров Габора заранее вычисляются коэффициенты. Которые затем используются в Матлабе. Файлы сохраняются в csv в виде 1 или 2 файлов, где строка файла - это вытянутые в вектор 18 габоров для целого изображения. Для генерации габоров выставите в main функции 
bool const GENERATE_GABORS = true; // Сгенерировать ли файл с Габорами

В матлабе затем используется функция featureToGabor.m, которая возвращает индексы в строке признаков, соответствующие определенному блоку. Аналогичная функция есть в С++ в классе genderize.
DSIFT признаки реализованы в Матлабе с использованием библиотеки С++. Так же написана функция на С++ (getDSIFT), возвращающая результаты, совпадающие с результатами вызова в Матлабе.
HOG признаки реализованы в матлабе (indirectHOG.m). И проверено их практически полное соотвтествие версии C++. 
Для обучения используется главный файл LFW.m
Процесс построен следующим образом
1. Начитываются изображения, вычисляются их метки
2. Загружаются признаки, указанным выше образом (DSIFT, GABOR). Вычисляются indirectHOG (HOG).
3. Для каждого блока из fea.csv и feaH.csv на тестовом множестве определяются коэффициенты регрессии. Т.е. если имеется блок, которому соответствует вектор принаков Xi, то ищутся A и b такие, что sum((Xi*A+b - yi).^2) -> min, где yi - вектор меток (1 для мужчин/0 - для женщин). Это решается с помощью МНК. Так, для каждого блока в разрезе тестовых изображений вычисляется вектор, где каждому тестовому изображению ставится в соответствие 1 число. Таким образом, каждый блок одного типа, в разрезе изображений может быть представлен вектор-столбцом. Совокупность таких столбцов для DSIFT - SIFT_, для HOG - HOGi, для GABOR - FG.
4. Вычисляется RealAdaBoost, используя предвычисленные вектор столбы после регрессии. Отбирается 25 признаков.
5. На отобранных RealAdaBoost векторах вычилется линейный SVM. Размерность - 25.
6. Сохраняется модель
Более детально опишу позже.

Установка.
Для работы обучения в матлаб нужны libSVM и vlfeat.
Для С++ версии нужны OpenCV и VLFEAT.
Установка Vlfeat требует наличия скомпилированной версии, совпадающей с разрядностью приложения.
Ссылка на принцип компиляции здесь http://www.vlfeat.org/compiling-windows.html
Для 64 разрядной версии возможно потребуется пара библиотек из стандартных C++ библиотек для распространения.
Добавление в проект - несложное: 
http://www.vlfeat.org/vsexpress.html
Единственное может потребоваться скопировать vlf.dll в каталог с запускаемым файлом.

Проект.
Состоит из 
1) main-файла с примером использования
2) файла с утилитами чтения/записи csv и чтения папок: utils.h
3) основного класса genderize
4) файла-модели exp.csv (необходим для инициализации genderize)

Matlab.
Для обучения необходимы файлы 
LFW.m -  основной файл
indirectHOG.m - HOG
RAB.m - реализация RealAdaBoost
testRAB8.m - вычисление предсказаний, на основе RAB
featureToGabor.m - вычисление векторов признаков на основе GABOR и положения блока
fea_feaH.mat - хранилище положений блоков
testLblSnap.mat - Хранилище разметки 20/80
predictor.m - Отладочный файл
writeToFile.m - запись структур P - RAB и model2 - SVM модели в настроечный файл для C++
PforLFW7.mat - хранилище с обученными на LFW P и model2